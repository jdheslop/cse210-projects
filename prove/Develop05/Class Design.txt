
Class: GoalOverview
//Attributes
    private List<Goal> _goals
    private int _totalPoints
    private string _fileName
//Constructor
public GoalOverview
    _totalPoints = 0
//Methods
    public void AddGoaltoList(Goal goal)
    public void IncreaseTotalPoints(int points)
    public int GetTotalPoints()
    public void DisplayItemsForRecordEventMenu()
    public string GetFileName()
    private void SaveToFile()
    private void LoadFromFile()
    private void CreateGoalFromString()

Base Class: abstract Goal
//Attributes
    protected string _goalType
    protected string _goalName
    protected string _goalDescription
    protected int _goalPoints
    protected bool _isComplete
//Getters & Setters
    protected bool GetIsComplete
    protected void SetIsComplete(bool status)
    public string GetGoalName
//Methods
    protected void CreateNewGoal
    protected abstract void DisplayGoal
    protected abstract void RecordEvent
    public abstract string CreateStringForFileSave
    public abstract void CreateGoalFromString

Derived Class: SimpleGoal : Goal
//Attributes
    No additional attributes
//Constructor
    public SimpleGoal() 
        _goalType = "SimpleGoal"
        _isComplete = false
    public SimpleGoal(List<string> goalString)
//Methods    
    protected override void DisplayGoal
    protected override void RecordEvent
    public override void CreateStringForFileSave
    public override void CreateGoalFromString

Derived Class: EternalGoal : Goal
//Attributes
    No additional attributes
//Constructor
    public EternalGoal 
        _goalType = "EternalGoal"
    public EternalGoal(List<string> goalString)
//Methods    
    protected override void DisplayGoal
    protected override void RecordEvent
    public override void CreateStringForFileSave
    public override void CreateGoalFromString

Derived Class: ChecklistGoal : Goal
//Attributes
    private int _goalQuantity
    private int _goalBonus
    private int _completedQuantity
//Constructor
    public ChecklistGoal 
        _goalType = "ChecklistGoal"
        _isComplete = false
    public ChecklistGoal(List<string> goalString)
//Methods    
    private void CreateChecklistGoal
				Calls CreateNewGoal + additional checklist questions 
    protected override void DisplayGoal
    protected override void RecordEvent
    public override void CreateStringForFileSave
    public override void CreateGoalFromString

Class: abstract Menu
//Attributes
    protected int _userSelection
    protected string _prompt
//Methods
    protected abstract void DisplayMenu
    public int GetUserSelection

Derived Class: MainMenu : Menu
//Constructor
    public MainMenu()
        _userSelection = 0
        _prompt = "Select a choice from the menu: "
//Methods
    protected override void DisplayMenu

Derived Class: CreateGoalMenu : Menu
//Constructor
    public CreateGoalMenu()
        _userSelection = 0
        _prompt = "Which type of goal would you like to create?  "
//Methods
    protected override void DisplayMenu

Derived Class: RecordEventMenu : Menu
//Constructor
    public RecordEventMenu()
        _userSelection = 0
        _prompt = "The goals are:  "
//Methods
    protected override void DisplayMenu
    private void DisplayTotalPoints

PROGRAM DESCRIPTION
This program has three main classes:
1. The GoalOverview class stores and works with the list of goals, total points, and saving/loading to/from the file.
2. The base Goal and derived SimpleGoal, EternalGoal, and Checklist classes create the common and unique data for each type of goal.
3. The base Menu and derived MainMenu, CreateGoalMenu, and RecordEventMenu classes create the menus.  

1. Display a main menu
2. Menu selection 1: Displays a menu to create a goal
    Simple Goals
        Name of the goal
        Description of the goal
        Number of points for the goal
    Eternal Goals
        Name of the goal
        Description of the goal
        Number of points for the goal
    Checklist Goals
        Name of the goal
        Description of the goal
        Number of points for the goal
        Number of bonus points
        How often to complete the goal
3. Menu selection 2: Displays the goals
4. Menu selection 3: Saves the goals to a file
5. Menu selection 4: Loads the goals from a file
6. Menu selection 5: Records achieving a goal
    Simple Goals
        Get the points
        Change status to completed
    Eternal Goals
        Get the points
    Checklist Goals
        Get the points
        Increase the counter
        When the counter = the target 
            Get the bonus points
            Change status to completed
7. Menu selection 6: Quits


PROGRAM DETAILS
PROGRAM DESCRIPTION
 
A. Display Main Menu
    Console.WriteLine("You have 0 points.");
    Console.WriteLine();
    Console.WriteLine("Menu Options:);
    Console.WriteLine("  1. Create New Goal");
    Console.WriteLine("  2. List Goals");
    Console.WriteLine("  3. Save Goals");
    Console.WriteLine("  4. Load Goals");
    Console.WriteLine("  5. Record Event");
    Console.WriteLine("  6. Quit");
    Console.Write("Select a choice from the menu: ");
    _userSelection = int.Parse(Console.ReadLine());
 
B. User Selection = 1. Create New Goal
Display Create Goal Menu
    Console.Clear()
    Console.WriteLine("The types of Goals are:");
    Console.WriteLine("  1. Simple Goal");
    Console.WriteLine("  2. Eternal Goal");
    Console.WriteLine("  3. Checklist Goal");
    Console.WriteLine("Which type of Goal would you like to create? ");
    _userSelection = int.Parse(Console.ReadLine());
1. Simple Goal
    Console.Write("What is the name of your goal? ");
    _goalName = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is a short description of it? ");
    _goalDescription = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is the amount of points associated with this goal? ");
    _goalPoints = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Return to Main Menu
2. Eternal Goal
    Console.Write("What is the name of your goal? ");
    _goalName = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is a short description of it? ");
    _goalDescription = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is the amount of points associated with this goal? ");
    _goalPoints = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Return to Main Menu
3. Checklist Goal
    Console.Write("What is the name of your goal? ");
    _goalName = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is a short description of it? ");
    _goalDescription = Console.ReadLine();
    Console.WriteLine();
    Console.Write("What is the amount of points associated with this goal? ");
    _goalPoints = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Console.Write("How many times does this goal need to be accomplished for a bonus? ");
    _goalQuantity = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Console.Write("What is the bonus for accomplishing it that many times? ");
    _goalBonus = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Return to Main Menu
 
B. User Selection = 2. List Goals
    Console.Clear()
    Console.WriteLine("The goals are:");
    Console.WriteLine("1. [ ] _goalName (_goalDescription)");
    For Checklist Goals:
        Console.WriteLine("1. [ ] _goalName (_goalDescription) -- Currently completed: _completedQuantity / _goalQuantity");
    Display Main Menu
 
C. User Selection = 3. Save Goals
    Console.Write("What is the filename for the goal file? ");
    _goalFile = Console.ReadLine();
    Console.WriteLine();
 
    The number of points is saved on the first line and then each goal is saved after that:
        SimpleGoal:name,description,points,False
        EternalGoal:name,description,points
        ChecklistGoal:name,description,points,bonusPoints,_goalQuantity,_completedQuantity
 
D. User Selection = 4. Load Goals
    Console.Write("What is the filename for the goal file? ");
    _goalFile = Console.ReadLine();
    Console.WriteLine();
 
E. User Selection = 5. Record Event
    Console.Clear()
    Console.WriteLine("The goals are:");
    Console.WriteLine("1. _goalName");
    Console.Write("Which goal did you accomplish? ");
    _accomplishedGoal = int.Parse(Console.ReadLine());
    Console.WriteLine();
    Console.WriteLine("Congratulations! You have earned _goalPoints points!");
    Console.WriteLine("You now have _totalPoints.");
    Console.WriteLine();
    Display Main Menu
    Add a cancel option
 
    If it was a simple goal that was completed, then for 2. List Goals, it would have an [X] when displaying.
    If a checklist goal was done, then for 2. List Goals it will increase the _completedQuantity counter.
    When completing all of the _goalQuantity then the _goalBonus is given and the [X] displayed.
 
Exceeding Requirements:
- Have a menu item to display open goals and another menu item to display completed goals.
- When creating a new goal, there is the option to create a random SimpleGoal.
    